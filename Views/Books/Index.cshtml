@model BookIndexViewModel
@using BookCatalog.Helpers

@{
    ViewData["Title"] = "Book Catalog";
}

<div class="bg-light p-4 mb-4 rounded shadow-sm text-center" style="font-family: 'Playfair Display';">
    <h1 class="h2 h-md-1">Explore the Catalog</h1>
    <p class="lead text-muted">Find timeless classics and hidden gems</p>
</div>

@if (Model.StaffPicks != null && Model.StaffPicks.Any())
{
    <div class="container mt-4 mb-4">
        <h2 class="mb-3">ðŸ“š Staff Picks</h2>
        <div class="swiper staff-picks-swiper">
            <div class="swiper-wrapper">
                @foreach (var book in Model.StaffPicks)
                {
                    <div class="swiper-slide">
                        <div class="card h-100 shadow-sm">
                            <img src="@book.CoverImageUrl"
                                 onerror="this.onerror=null;this.src='/images/fallback.jpg';"
                                 class="card-img-top staff-picks-img"
                                 alt="Book cover" />
                            <div class="card-body">
                                <h5 class="card-title">@book.Title</h5>
                                <p class="card-text text-muted">@book.Author</p>
                                <span class="badge @GenreStyleHelper.GetGenreBadgeClass(book.Genre)">@book.Genre</span>
                                <p class="card-text mt-2"><strong>$@book.Price</strong></p>
                                <div class="d-flex flex-wrap gap-2">
                                    <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-outline-primary btn-sm">View</a>
                                    <form asp-action="ToggleFavorite" asp-route-id="@book.Id" method="post" class="d-inline">
                                        <button type="submit" class="btn btn-outline-danger btn-sm @(book.IsFavorite ? "active fw-bold" : "")">
                                            <i class="fas fa-heart"></i> @(book.IsFavorite ? "Favorited" : "Favorite")
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
            <div class="swiper-pagination"></div>
        </div>
    </div>
}

<div class="d-flex justify-content-end mb-3">
    <a asp-action="Index" asp-route-viewMode="grid"
       class="btn btn-outline-primary me-2 @(ViewBag.ViewMode == "grid" ? "active fw-bold" : "")">
        <i class="fas fa-th-large me-1"></i> Grid
    </a>
    <a asp-action="Index" asp-route-viewMode="list"
       class="btn btn-outline-primary @(ViewBag.ViewMode == "list" ? "active fw-bold" : "")">
        <i class="fas fa-bars me-1"></i> List
    </a>
</div>

<div class="container">
    <form asp-controller="Books" asp-action="Index" method="get" class="mb-4 row g-2">
        <input type="hidden" name="viewMode" value="@ViewBag.ViewMode" />
        <div class="col-md-4">
            <input type="text" name="searchString" value="@Model.SearchString" class="form-control" placeholder="Search by title or author"/>
        </div>
        <div class="col-md-4">
            <select asp-for="BookGenre" asp-items="Model.Genres" class="form-select">
                <option value="">All Genres</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </div>
        <div class="col-md-2">
            <a asp-action="Index" class="btn btn-secondary w-100">Reset</a>
        </div>
        <div class="col-md-4">
            <label for="sortOrder" class="form-label">Sort By</label>
            <select id="sortOrder" name="sortOrder" class="form-select" onchange="this.form.submit()">
                @foreach (var option in new List<(string Value, string Text)>
                          {
                              ("", "Sort by Title (A-Z)"),
                              ("title_desc", "Title (Z-A)"),
                              ("author", "Author (A-Z)"),
                              ("author_desc", "Author (Z-A)"),
                              ("price", "Price (Low to High)"),
                              ("price_desc", "Price (High to Low)"),
                              ("rating_desc", "Rating (High to Low)")
                          })
                {
                    if ((ViewBag.CurrentSort as string ?? "") == option.Value)
                    {
                        <option value="@option.Value" selected>@option.Text</option>
                    }
                    else
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <input type="hidden" name="searchString" value="@Model.SearchString" />
            <input type="hidden" name="bookGenre" value="@Model.BookGenre" />
            <input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
            <input type="hidden" name="viewMode" value="@ViewBag.ViewMode" />
            <input type="hidden" name="showFavorites" value="@(ViewBag.ShowFavorites ? "false" : "true")" />
            <button type="submit" class="btn @(ViewBag.ShowFavorites ? "btn-danger" : "btn-outline-danger") w-100">
                @(ViewBag.ShowFavorites ? "Show All Books" : "Show Favorites")
            </button>
        </div>
    </form>
</div>

@if (ViewBag.ViewMode == "list")
{
    <div class="list-group">
        @foreach (var book in Model.Books)
        {
            <div class="list-group-item mb-2 shadow-sm d-flex align-items-center" style="background-color: #fffdf9;">
                <img src="@book.CoverImageUrl"
                     onerror="this.onerror=null;this.src='/images/fallback.jpg';"
                     style="height: 120px; width: 80px; object-fit: cover;" class="me-3" alt="Book cover" />
                <div>
                    <h5 class="mb-1">@book.Title</h5>
                    <p class="mb-1 text-muted">@book.Author</p>
                    <p class="mb-1">
                        <span class="badge @GenreStyleHelper.GetGenreBadgeClass(book.Genre)">@book.Genre</span>
                    </p>
                    <p class="mb-2"><strong>$@book.Price</strong></p>

                    <div class="d-grid gap-2 d-md-flex">
                        <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-outline-primary btn-sm">View</a>
                        <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-outline-warning btn-sm">Edit</a>
                        <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                        <form asp-action="ToggleFavorite" asp-route-id="@book.Id" method="post" class="d-inline">
                            <button type="submit" class="btn btn-outline-danger btn-sm w-100 w-md-auto @(book.IsFavorite ? "active fw-bold" : "")">
                                <i class="fas fa-heart"></i> @(book.IsFavorite ? "Favorited" : "Favorite")
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var book in Model.Books)
        {
            <div class="col">
                <div class="card h-100 border-0 shadow-sm" style="background-color: #fffdf9;">
                    <img src="@book.CoverImageUrl"
                         onerror="this.onerror=null;this.src='/images/fallback.jpg';"
                         class="card-img-top" style="height: 300px; object-fit: cover;" alt="Book cover" />
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text text-muted">@book.Author</p>
                        <p class="card-text">
                            <span class="badge @GenreStyleHelper.GetGenreBadgeClass(book.Genre)">@book.Genre</span>
                        </p>
                        <p class="card-text"><strong>$@book.Price</strong></p>

                        <div class="d-grid gap-2 d-md-flex">
                            <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-primary btn-sm" style="background-color: #5d3a00; border: none;">View</a>
                            <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-primary btn-sm" style="background-color: #5d3a00; border: none;">Edit</a>
                            <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-primary btn-sm" style="background-color: #5d3a00; border: none;">Delete</a>
                            <form asp-action="ToggleFavorite" asp-route-id="@book.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-outline-danger btn-sm w-100 w-md-auto @(book.IsFavorite ? "active fw-bold" : "")">
                                    <i class="fas fa-heart"></i> @(book.IsFavorite ? "Favorited" : "Favorite")
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<a asp-action="Create" class="btn btn-success mt-3">Add New Book</a>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    new Swiper('.staff-picks-swiper', {
        autoplay: {
            delay: 5000,
            disableOnInteraction: false,
        },
        loop: true,
          spaceBetween: 16,
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          breakpoints: {
            0: {
              slidesPerView: 1,
            },
            576: {
              slidesPerView: 2,
            },
            768: {
              slidesPerView: 3,
            },
            992: {
              slidesPerView: 4,
            },
          }
        });
      });
</script>